name: CI
on:
  pull_request: {}
  push:
    branches:
      - main

jobs:
  golang-ci:
    name: Go Lang CI
    runs-on: ubuntu-24.04
    env:
      docker-compose-service: golang-devtools
      XDG_CACHE_HOME: ${{ github.workspace }}/.cache/xdg
    steps:
      - uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
      - id: xdg_cache_hash
        run: echo "xdg_cache_hash=${{hashFiles('./docker-compose.yml', './docker-compose/Dockerfile', './go.sum')}}" >> $GITHUB_OUTPUT
      - name: Cache xdg
        uses: actions/cache@v4
        with:
          path: ${{ env.XDG_CACHE_HOME }}
          key: xdg-${{ github.repository }}-${{ github.job }}-${{ steps.xdg_cache_hash.outputs.xdg_cache_hash }}
          restore-keys: |
            xdg-${{ github.repository }}-${{ github.job }}-${{ steps.xdg_cache_hash.outputs.xdg_cache_hash }}
            xdg-${{ github.repository }}-${{ github.job }}-
      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure access to internal and private GitHub repos
        run: git config --global url."https://${{ secrets.REVIEWBOT_GITHUB_TOKEN }}:x-oauth-basic@github.com/coopnorge".insteadOf "https://github.com/coopnorge"
      - name: Build devtools
        run: docker compose build
      - name: Validate
        run: docker compose run --rm ${{ env.docker-compose-service }} validate VERBOSE=all

  techdocs:
    permissions:
      contents: read
      id-token: write
      packages: read
      pull-requests: read
    name: TechDocs
    uses: coopnorge/github-workflow-techdocs/.github/workflows/techdocs.yaml@v0

  build:
    needs:
      - golang-ci
      - techdocs
    if: always()
    runs-on: ubuntu-24.04
    steps:
      - run: exit 1
        name: "Catch errors"
        if: |
          needs.golang-ci.result == 'failure' ||
          needs.techdocs.result == 'failure'
    permissions: {}
